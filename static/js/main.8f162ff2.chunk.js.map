{"version":3,"sources":["SortField.tsx","components/goods.tsx","components/Buttons.tsx","App.tsx","index.tsx"],"names":["SortField","Goods","goods","map","good","Buttons","sortField","setSortField","reversed","setReversed","className","type","classNames","name","onClick","length","goodsFromServer","App","useState","visibleGoods","goodsNames","prepearGoods","sort","good1","good2","localeCompare","reverse","getPreparedGoods","ReactDOM","render","document","getElementById"],"mappings":"6KAAYA,E,0DCICC,EAAyB,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACpC,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,S,0BDPlBJ,K,YAAAA,E,iBAAAA,M,KEUL,IAAMK,EAA2B,SAAC,GAElC,IADLC,EACI,EADJA,UAAWC,EACP,EADOA,aAAcC,EACrB,EADqBA,SAAUC,EAC/B,EAD+BA,YAOnC,OACE,sBAAKC,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CAAE,WAAYN,IAAcN,EAAUa,OAExCC,QAAS,kBAAMP,EAAaP,EAAUa,OAPxC,iCAYA,wBACEF,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,WAAYN,IAAcN,EAAUe,SAExCD,QAAS,kBAAMP,EAAaP,EAAUe,SAPxC,4BAYA,wBACEJ,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,YAAyB,IAAbJ,IAEhBM,QAAS,kBAAML,GAAaD,IAP9B,qBAYEF,GAAaE,EAEX,wBACEG,KAAK,SACLD,UAAU,4BACVI,QAAS,kBA/CjBL,GAAY,QACZF,EAAa,KA2CP,mBAQA,SC3DGS,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAoCK,IAAMC,EAAgB,WAC3B,MAAkCC,mBAAS,IAA3C,mBAAOZ,EAAP,KAAkBC,EAAlB,KACA,EAAgCW,oBAAS,GAAzC,mBAAOV,EAAP,KAAiBC,EAAjB,KACMU,EA/BR,SACEC,EADF,GAGG,IADCd,EACF,EADEA,UAAWE,EACb,EADaA,SAEPa,EAAY,YAAOD,GAqBzB,OAnBId,GACFe,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQlB,GACN,KAAKN,EAAUa,KACb,OAAOU,EAAME,cAAcD,GAE7B,KAAKxB,EAAUe,OACb,OAAOQ,EAAMR,OAASS,EAAMT,OAE9B,QACE,OAAO,MAKXP,GACFa,EAAaK,UAGRL,EAMcM,CACnBX,EAAiB,CAAEV,YAAWE,aAGhC,OACE,sBAAKE,UAAU,kBAAf,UACE,cAAC,EAAD,CACEJ,UAAWA,EACXC,aAAcA,EACdC,SAAUA,EACVC,YAAaA,IAEf,cAAC,EAAD,CAAOP,MAAOiB,QCjEpBS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.8f162ff2.chunk.js","sourcesContent":["export enum SortField {\n  name = 'name',\n  length = 'length',\n}\n","type Props = {\n  goods: string[];\n};\n\nexport const Goods: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li data-cy=\"Good\" key={good}>\n        {good}\n      </li>\n    ))}\n  </ul>\n);\n","import classNames from 'classnames';\nimport { SortField } from '../SortField';\n\ntype Props = {\n  sortField: string;\n  setSortField: (value: string) => void;\n  reversed: boolean;\n  setReversed: (value: boolean) => void;\n};\n\nexport const Buttons: React.FC<Props> = ({\n  sortField, setSortField, reversed, setReversed,\n}) => {\n  const onReverse = () => {\n    setReversed(false);\n    setSortField('');\n  };\n\n  return (\n    <div className=\"buttons\">\n      <button\n        type=\"button\"\n        className={classNames(\n          'button',\n          'is-info',\n          { 'is-light': sortField !== SortField.name },\n        )}\n        onClick={() => setSortField(SortField.name)}\n      >\n        Sort alphabetically\n      </button>\n\n      <button\n        type=\"button\"\n        className={classNames(\n          'button',\n          'is-success',\n          { 'is-light': sortField !== SortField.length },\n        )}\n        onClick={() => setSortField(SortField.length)}\n      >\n        Sort by length\n      </button>\n\n      <button\n        type=\"button\"\n        className={classNames(\n          'button',\n          'is-warning',\n          { 'is-light': reversed === false },\n        )}\n        onClick={() => setReversed(!reversed)}\n      >\n        Reverse\n      </button>\n\n      {(sortField || reversed)\n        ? (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => onReverse()}\n          >\n            Reset\n          </button>\n        )\n        : null}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport { Goods } from './components/goods';\nimport { Buttons } from './components/Buttons';\nimport { SortField } from './SortField';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ninterface PrepearedGoods {\n  sortField: string;\n  reversed: boolean;\n}\n\nfunction getPreparedGoods(\n  goodsNames: string[],\n  { sortField, reversed }: PrepearedGoods,\n) {\n  const prepearGoods = [...goodsNames];\n\n  if (sortField) {\n    prepearGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SortField.name:\n          return good1.localeCompare(good2);\n\n        case SortField.length:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reversed) {\n    prepearGoods.reverse();\n  }\n\n  return prepearGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortField, setSortField] = useState('');\n  const [reversed, setReversed] = useState(false);\n  const visibleGoods = getPreparedGoods(\n    goodsFromServer, { sortField, reversed },\n  );\n\n  return (\n    <div className=\"section content\">\n      <Buttons\n        sortField={sortField}\n        setSortField={setSortField}\n        reversed={reversed}\n        setReversed={setReversed}\n      />\n      <Goods goods={visibleGoods} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}